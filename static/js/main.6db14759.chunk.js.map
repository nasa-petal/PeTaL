{"version":3,"sources":["App.js","theme.js","index.js"],"names":["useStyles","makeStyles","root","height","media","MediaCard","props","classes","Card","className","CardContent","Typography","gutterBottom","variant","component","Link","color","target","rel","href","article","S","U","DN","F","map","topic","index","FN","Results","Component","App","onSelectionChange","event","values","setState","selection","state","id","query","url","URL","params","expr","model","count","offset","attributes","search","URLSearchParams","toString","fetch","headers","then","res","json","data","console","log","articlesToDisplay","entities","catch","functions","bind","articleCards","this","Grid","item","xs","Id","Container","maxWidth","Box","my","Autocomplete","options","sort","a","b","level2","localeCompare","groupBy","option","getOptionLabel","level3","style","width","onChange","renderInput","TextField","label","container","spacing","direction","justify","alignItems","Items","forEach","includes","Level3","push","toLowerCase","split","join","Level2","theme","createMuiTheme","typography","fontFamily","palette","primary","main","secondary","error","type","background","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.6db14759.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles({\n  root: {\n    //maxWidth: 345,\n    height: '100%'\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          <Link\n            color=\"primary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={props.article.S ? props.article.S[0].U : ''}\n          >\n            {props.article.DN}\n          </Link>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          MAG topics:\n        {props.article.F.map((topic, index) => (\n          <span>{ \" \" + topic.FN + ',' }</span>\n        ))}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nclass Results extends Component {\n  render() {\n    return (\n      <div></div>\n    )\n  }\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n  }\n\n  onSelectionChange = (event, values) => {\n    this.setState({\n      selection: values\n    }, () => {\n      //if the selection is X'd out, just fetch original articles\n      if (this.state.selection == null) {\n        this.setState({ articlesToDisplay: [] })\n        return;\n      }\n\n      // Query MAG\n\n      \n      switch(this.state.selection.id) {\n        case 'modify/convert_thermal_energy':\n          query = \"Or(Composite(F.FN=='thermal converter'),Composite(F.FN=='thermal control'),Composite(F.FN=='thermal balance'))\";\n          break;\n        case 'distribute_energy':\n          query = \"Or(Composite(F.FN=='thermal distribution'),Composite(F.FN=='heat transfer process'),Composite(F.FN=='transient heat transfer'),Composite(F.FN=='heat spreading'),Composite(F.FN=='heat flow'),Composite(F.FN=='heat transfer fluid'),Composite(F.FN=='thermal emission'),Composite(F.FN=='thermal transport'),Composite(F.FN=='bioheat transfer'),Composite(F.FN=='heat transfer model'),Composite(F.FN=='heat spreading'))\";\n          break;\n        case 'protect_from_temperature':\n          query = \"Or(Composite(F.FN=='thermal resistance'),Composite(F.FN=='passive cooling'),Composite(F.FN=='thermal control'),Composite(F.FN=='thermal fatigue'),Composite(F.FN=='thermal strain'),Composite(F.FN=='thermal dissipation'),Composite(F.FN=='convective cooling'),Composite(F.FN=='thermal buckling'),Composite(F.FN=='thermal residual stress'),Composite(F.FN=='thermal degradation of polymers'),Composite(F.FN=='space shuttle thermal protection system'),Composite(F.FN=='heat spreading'),Composite(F.FN=='heat stress'),Composite(F.FN=='heat tolerance'))\";\n          break;\n        case 'sense_temperature_cues':\n          query = \"Or(Composite(F.FN=='thermal sensing'),Composite(F.FN=='temperature measurement'),Composite(F.FN=='temperature monitoring'),Composite(F.FN=='temperature sensing'),Composite(F.FN=='thermal detector'),Composite(F.FN=='thermal monitoring'),Composite(F.FN=='thermal probe'),Composite(F.FN=='thermal sensors'),Composite(F.FN=='infrared thermal imaging'))\";\n          break;\n        case 'store_energy':\n          query = \"Composite(F.FN=='solar thermal collector')\";\n          break;\n      }\n\n      var query = \"And(Ty='0',\" + query + \",Or(Composite(J.JN=='biomimetics'), Composite(F.FN=='biology')))\";\n\n      const url = new URL('https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate');\n      const params = {\n        expr: query,\n        model: 'latest',\n        count: 10000,\n        offset: 0,\n        attributes: 'Id,DOI,DN,VFN,F.FN,AA.AuId,AW,RId,S'\n      }\n      url.search = new URLSearchParams(params).toString();\n\n      fetch(url, {\n        headers: {\n          'Ocp-Apim-Subscription-Key': 'd969a6c4bef34765ae7c5f0e75dd624e'\n        }\n      })\n        .then(res => res.json())\n        .then((data) => {\n          console.log(data);\n          this.setState({ articlesToDisplay: data.entities })\n        })\n        .catch(console.log)\n\n      //querying the database by selected label\n      /*const selection_label = this.state.selection.id\n      const url = new URL('https://unbqm6hov8.execute-api.us-east-2.amazonaws.com/v1/getarticles')\n      const params = { level3: selection_label }\n      // assigning label to url\n      url.search = new URLSearchParams(params).toString();\n      fetch(url)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ articlesToDisplay: data.Items })\n        })\n        .catch(console.log)*/\n    });\n  }\n\n  render() {\n\n    const articleCards = this.state.articlesToDisplay.map((article) =>\n      <Grid item xs={12} key={article.Id}><MediaCard article={article} /></Grid>\n    );\n\n    return (\n      <Container maxWidth=\"lg\">\n        <Box my={4}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            How does nature...\n          </Typography>\n          <Autocomplete\n            id=\"function\"\n            options={this.state.functions.sort((a, b) => -b.level2.localeCompare(a.level2))}\n            groupBy={(option) => option.level2}\n            getOptionLabel={(option) => option.level3}\n            style={{ width: 300 }}\n            onChange={this.onSelectionChange}\n            renderInput={(params) => <TextField {...params} label=\"\" variant=\"outlined\" />}\n          />\n        </Box>\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"stretch\"\n        >\n        {articleCards}\n        </Grid>\n        <Results />\n      </Container>\n    )\n  }\n  \n  state = {\n    selection: [],\n    functions: [],\n    articlesToDisplay: []\n  };\n\n  componentDidMount() {\n    // connect to petal-api to fetch articles list.\n    fetch('https://unbqm6hov8.execute-api.us-east-2.amazonaws.com/v1/getalllabels')\n    .then(res => res.json())\n    .then((data) => {\n\n      let functions = [];\n      let labels = data.Items;\n\n      labels.forEach(label => {\n        if(['Modify/convert thermal energy', 'Sense temperature cues', 'Protect from temperature', 'Store energy', 'Distribute energy'].includes(label.Level3.S)){\n          functions.push({\n            id: label.Level3.S.toLowerCase().split(' ').join('_'),\n            level2: label.Level2.S,\n            level3: label.Level3.S\n          })\n        }\n      })\n\n      this.setState({ functions: functions })\n    })\n    .catch(console.log)\n  }\n\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      '\"Helvetica Neue\"',\n      'Helvetica',\n      'Roboto',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  palette: {\n    primary: {\n      main: '#9bdaf1',\n    },\n    secondary: {\n      main: '#dd361c',\n    },\n    error: {\n      main: '#dd361c',\n    },\n    type: 'dark',\n    background: {\n      //default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}