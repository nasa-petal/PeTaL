{"version":3,"sources":["App.js","theme.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","height","media","MediaCard","props","classes","Card","className","CardContent","Typography","gutterBottom","variant","component","Link","color","href","article","DownloadURL","S","Title","Abstract","Results","Component","App","onSelectionChange","event","values","setState","selection","state","selection_label","id","url","URL","params","level3","search","URLSearchParams","toString","fetch","then","res","json","data","articlesToDisplay","Items","catch","console","log","functions","bind","articleCards","this","map","Grid","item","SortKey","Container","Box","my","Autocomplete","options","sort","a","b","level2","localeCompare","groupBy","option","getOptionLabel","style","width","onChange","renderInput","TextField","label","container","spacing","direction","justify","alignItems","forEach","push","Level3","toLowerCase","replace","Level2","theme","createMuiTheme","typography","fontFamily","join","palette","primary","main","secondary","error","type","background","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.38dfaee7.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    height: '100%'\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          <Link\n            color=\"primary\"\n            href={props.article.DownloadURL.S}\n          >\n            {props.article.Title.S}\n          </Link>\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.article.Abstract.S}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nclass Results extends Component {\n  render() {\n    return (\n      <div></div>\n    )\n  }\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n  }\n\n  onSelectionChange = (event, values) => {\n    this.setState({\n      selection: values\n    }, () => {\n      //if the selection is X'd out, just fetch original articles\n      if (this.state.selection == null) {\n        this.setState({ articlesToDisplay: [] })\n        return;\n      }\n\n      //querying the database by selected label\n      const selection_label = this.state.selection.id\n      const url = new URL('https://unbqm6hov8.execute-api.us-east-2.amazonaws.com/v1/getarticles')\n      const params = { level3: selection_label }\n      // assigning label to url\n      url.search = new URLSearchParams(params).toString();\n      fetch(url)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ articlesToDisplay: data.Items })\n        })\n        .catch(console.log)\n    });\n  }\n\n  render() {\n\n    const articleCards = this.state.articlesToDisplay.map((article) =>\n      <Grid item key={article.SortKey.S}><MediaCard article={article} /></Grid>\n    );\n\n    return (\n      <Container maxWidth=\"lg\">\n        <Box my={4}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            How does nature...\n          </Typography>\n          <Autocomplete\n            id=\"function\"\n            options={this.state.functions.sort((a, b) => -b.level2.localeCompare(a.level2))}\n            groupBy={(option) => option.level2}\n            getOptionLabel={(option) => option.level3}\n            style={{ width: 300 }}\n            onChange={this.onSelectionChange}\n            renderInput={(params) => <TextField {...params} label=\"\" variant=\"outlined\" />}\n          />\n        </Box>\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"stretch\"\n        >\n        {articleCards}\n        </Grid>\n        <Results />\n      </Container>\n    )\n  }\n  \n  state = {\n    selection: [],\n    functions: [],\n    articlesToDisplay: []\n  };\n\n  componentDidMount() {\n    // connect to petal-api to fetch articles list.\n    fetch('https://unbqm6hov8.execute-api.us-east-2.amazonaws.com/v1/getalllabels')\n    .then(res => res.json())\n    .then((data) => {\n\n      let functions = [];\n      let labels = data.Items;\n\n      labels.forEach(label => {\n        functions.push({\n          id: label.Level3.S.toLowerCase().replace(\" \", \"_\"),\n          level2: label.Level2.S,\n          level3: label.Level3.S\n        })\n      })\n\n      this.setState({ functions: functions })\n    })\n    .catch(console.log)\n  }\n\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      '\"Helvetica Neue\"',\n      'Helvetica',\n      'Roboto',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  palette: {\n    primary: {\n      main: '#9bdaf1',\n    },\n    secondary: {\n      main: '#dd361c',\n    },\n    error: {\n      main: '#dd361c',\n    },\n    type: 'dark',\n    background: {\n      //default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}