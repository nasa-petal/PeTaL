{"version":3,"sources":["App.js","theme.js","index.js"],"names":["useStyles","makeStyles","root","height","media","MediaCard","props","classes","Card","className","CardContent","Typography","gutterBottom","variant","component","Link","color","target","rel","href","article","url","S","title","Results","Component","App","onSelectionChange","event","values","setState","selection","fetchInProgress","state","getAllData","params","a","_getAllData","startKey","sortkey","SortKey","partkey","PartitionKey","search","URLSearchParams","toString","fetch","then","res","json","lastEvaluatedKey","rows","result","concat","Items","LastEvaluatedKey","selection_label","id","URL","level3","data","sort","b","parseFloat","score","articlesToDisplay","catch","console","log","functions","bind","articleCards","this","map","Grid","item","xs","Container","maxWidth","Box","my","Autocomplete","options","level2","localeCompare","groupBy","option","getOptionLabel","style","width","float","onChange","renderInput","TextField","label","CircularProgress","marginLeft","padding","length","container","spacing","direction","justify","alignItems","forEach","push","toLowerCase","split","join","theme","createMuiTheme","typography","fontFamily","palette","primary","main","secondary","error","type","background","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"yVAgBMA,EAAYC,YAAW,CAC3BC,KAAM,CAEJC,OAAQ,QAEVC,MAAO,CACLD,OAAQ,OAIZ,SAASE,EAAUC,GACjB,IAAMC,EAAUP,IAEhB,OACE,cAACQ,EAAA,EAAD,CAAMC,UAAWF,EAAQL,KAAzB,SACE,cAACQ,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,OAAO,SACPC,IAAI,sBACJC,KAAMb,EAAMc,QAAQC,IAAIC,EAJ1B,SAMGhB,EAAMc,QAAQG,MAAMD,U,IAQ3BE,E,4JACJ,WACE,OACE,4B,GAHgBC,aAoIPC,E,kDA1Hb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAIRqB,kBAAoB,SAACC,EAAOC,GAC1B,EAAKC,SAAS,CACZC,UAAWF,EACXG,iBAAiB,IAChB,WAED,GAA4B,MAAxB,EAAKC,MAAMF,UAAf,CAMA,IAAMG,EAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sDACXC,EADW,+BAAAD,EAAA,MACG,WAAOD,EAAQG,GAAf,SAAAF,EAAA,6DACdE,IACFH,EAAOI,QAAUD,EAASE,QAAQlB,EAClCa,EAAOM,QAAUH,EAASI,aAAapB,GAGzCD,EAAIsB,OAAS,IAAIC,gBAAgBT,GAAQU,WANvB,kBAQXC,MAAMzB,GAAK0B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WARhB,2CADH,wDAWbC,EAAmB,KACnBC,EAAO,GAZM,uBAcMd,EAAYF,EAAQe,GAd1B,OAcTE,EAdS,OAefD,EAAOA,EAAKE,OAAOD,EAAOE,OAC1BJ,EAAmBE,EAAOG,iBAhBX,UAiBRL,EAjBQ,gDAkBVC,GAlBU,4CAAH,sDAqBVK,EAAkB,EAAKvB,MAAMF,UAAU0B,GACvCpC,EAAM,IAAIqC,IAAI,yEAGpBxB,EAFe,CAAEyB,OAAQH,IAENT,MAAK,SAACa,GACvB,EAAK9B,SAAS,CAAEE,iBAAiB,IAGjC4B,EAAKC,MAAK,SAAUzB,EAAG0B,GACrB,OAAOC,WAAWD,EAAEE,MAAM1C,GAAKyC,WAAW3B,EAAE4B,MAAM1C,MAGpD,EAAKQ,SAAS,CAAEmC,kBAAmBL,OAClCM,MAAMC,QAAQC,UAvCf,EAAKtC,SAAS,CAAEmC,kBAAmB,GAAIjC,iBAAiB,QAZ3C,EA4FnBC,MAAQ,CACNF,UAAW,GACXsC,UAAW,GACXJ,kBAAmB,IA7FnB,EAAKtC,kBAAoB,EAAKA,kBAAkB2C,KAAvB,gBAFR,E,0CAuDnB,WAEE,IAAMC,EAAeC,KAAKvC,MAAMgC,kBAAkBQ,KAAI,SAACrD,GAAD,OACpD,cAACsD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SAA2C,cAACvE,EAAD,CAAWe,QAASA,KAAvCA,EAAQoB,QAAQlB,MAG1C,OACE,eAACuD,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACrE,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,KAAKF,cAAY,EAApD,gCAGA,cAACqE,EAAA,EAAD,CACExB,GAAG,WACHyB,QAASV,KAAKvC,MAAMoC,UAAUR,MAAK,SAACzB,EAAG0B,GAAJ,OAAWA,EAAEqB,OAAOC,cAAchD,EAAE+C,WACvEE,QAAS,SAACC,GAAD,OAAYA,EAAOH,QAC5BI,eAAgB,SAACD,GAAD,OAAYA,EAAO3B,QACnC6B,MAAO,CAAEC,MAAO,IAAKC,MAAO,QAC5BC,SAAUnB,KAAK7C,kBACfiE,YAAa,SAACzD,GAAD,OAAY,cAAC0D,EAAA,EAAD,2BAAe1D,GAAf,IAAuB2D,MAAM,GAAGjF,QAAQ,iBAEjE2D,KAAKvC,MAAMD,gBAAkB,cAAC+D,EAAA,EAAD,CAAkBP,MAAO,CAACE,MAAO,OAAQM,WAAY,UAAc,sBAAKR,MAAO,CAACS,QAAS,OAAQP,MAAO,QAArC,UAA+ClB,KAAKvC,MAAMgC,kBAAkBiC,OAA5E,iBAEpG,cAACxB,EAAA,EAAD,CACEyB,WAAS,EACTC,QAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,UALb,SAOChC,IAED,cAAC,EAAD,S,+BAWN,WAAqB,IAAD,OAElBzB,MAAM,0EACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACa,GAEL,IAAIS,EAAY,GACHT,EAAKN,MAEXkD,SAAQ,SAAAV,GACbzB,EAAUoC,KAAK,CACbhD,GAAIqC,EAAMnC,OAAOrC,EAAEoF,cAAcC,MAAM,KAAKC,KAAK,KACjDzB,OAAQW,EAAMX,OAAO7D,EACrBqC,OAAQmC,EAAMnC,OAAOrC,OAIzB,EAAKQ,SAAS,CAAEuC,UAAWA,OAE5BH,MAAMC,QAAQC,S,GAvHD3C,a,QClBHoF,EAjCDC,YAAe,CAC3BC,WAAY,CACVC,WAAY,CACV,gBACA,qBACA,aACA,mBACA,YACA,SACA,QACA,aACA,sBACA,mBACA,qBACAJ,KAAK,MAETK,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAM,WAERG,KAAM,OACNC,WAAY,MCxBhBC,IAASC,OACP,eAACC,EAAA,EAAD,CAAeb,MAAOA,EAAtB,UAEE,cAACc,EAAA,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.06b123b0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Pagination from '@material-ui/lab/Pagination';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    //maxWidth: 345,\n    height: '100%'\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          <Link\n            color=\"primary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={props.article.url.S}\n          >\n            {props.article.title.S}\n          </Link>\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nclass Results extends Component {\n  render() {\n    return (\n      <div></div>\n    )\n  }\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n  }\n\n  onSelectionChange = (event, values) => {\n    this.setState({\n      selection: values,\n      fetchInProgress: true\n    }, () => {\n      //if the selection is X'd out, just fetch original articles\n      if (this.state.selection == null) {\n        this.setState({ articlesToDisplay: [], fetchInProgress: false })\n        return;\n      }\n\n      //querying the database by selected label\n      const getAllData = async (params) => {\n        const _getAllData = async (params, startKey) => {\n          if (startKey) {\n            params.sortkey = startKey.SortKey.S\n            params.partkey = startKey.PartitionKey.S\n          }\n          // assigning label to url\n          url.search = new URLSearchParams(params).toString()\n\n          return fetch(url).then(res => res.json())\n        }\n        let lastEvaluatedKey = null\n        let rows = []\n        do {\n          const result = await _getAllData(params, lastEvaluatedKey)\n          rows = rows.concat(result.Items)\n          lastEvaluatedKey = result.LastEvaluatedKey\n        } while (lastEvaluatedKey)\n        return rows\n      }\n\n      const selection_label = this.state.selection.id\n      const url = new URL('https://ardwrgr7s5.execute-api.us-east-2.amazonaws.com/v1/getarticles')\n      const params = { level3: selection_label }\n\n      getAllData(params).then((data) => {\n        this.setState({ fetchInProgress: false });\n\n        // sort papers by scores DESC.\n        data.sort(function (a, b) {\n          return parseFloat(b.score.S) - parseFloat(a.score.S);\n        });\n\n        this.setState({ articlesToDisplay: data })\n      }).catch(console.log)\n    });\n  }\n\n  render() {\n\n    const articleCards = this.state.articlesToDisplay.map((article) =>\n      <Grid item xs={12} key={article.SortKey.S}><MediaCard article={article} /></Grid>\n    );\n\n    return (\n      <Container maxWidth=\"lg\">\n        <Box my={4}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            How does nature...\n          </Typography>\n          <Autocomplete\n            id=\"function\"\n            options={this.state.functions.sort((a, b) => -b.level2.localeCompare(a.level2))}\n            groupBy={(option) => option.level2}\n            getOptionLabel={(option) => option.level3}\n            style={{ width: 300, float: \"left\" }}\n            onChange={this.onSelectionChange}\n            renderInput={(params) => <TextField {...params} label=\"\" variant=\"outlined\" />}\n          />\n          { this.state.fetchInProgress ? <CircularProgress style={{float: \"left\", marginLeft: \"20px\" }}/> : <div style={{padding: \"20px\", float: \"left\"}}>{this.state.articlesToDisplay.length} results</div> }\n        </Box>\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"stretch\"\n        >\n        {articleCards}\n        </Grid>\n        <Results />\n      </Container>\n    )\n  }\n  \n  state = {\n    selection: [],\n    functions: [],\n    articlesToDisplay: []\n  };\n\n  componentDidMount() {\n    // connect to petal-api to fetch articles list.\n    fetch('https://ardwrgr7s5.execute-api.us-east-2.amazonaws.com/v1/getalllabels')\n    .then(res => res.json())\n    .then((data) => {\n\n      let functions = [];\n      let labels = data.Items;\n\n      labels.forEach(label => {\n        functions.push({\n          id: label.level3.S.toLowerCase().split(' ').join('_'),\n          level2: label.level2.S,\n          level3: label.level3.S\n        })\n      })\n\n      this.setState({ functions: functions })\n    })\n    .catch(console.log)\n  }\n\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      '\"Helvetica Neue\"',\n      'Helvetica',\n      'Roboto',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  palette: {\n    primary: {\n      main: '#9bdaf1',\n    },\n    secondary: {\n      main: '#dd361c',\n    },\n    error: {\n      main: '#dd361c',\n    },\n    type: 'dark',\n    background: {\n      //default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}